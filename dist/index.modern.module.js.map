{"version":3,"file":"index.modern.module.js","sources":["../src/elements/entityEventNotification/IEntityEventNotificationReadDto.ts","../src/elements/entityPermission/IEntityPermissionReadDto.ts","../src/elements/event/IEventReadDto.ts","../src/elements/field/IFieldReadDto.ts","../src/elements/message/IMessageReadDto.ts","../src/elements/model/IModelReadDto.ts","../src/elements/modelState/IModelStateReadDto.ts","../src/elements/notification/INotificationReadDto.ts","../src/elements/post/IPostReadDto.ts","../src/elements/reaction/IReactionReadDto.ts","../src/elements/role/IRoleReadDto.ts","../src/elements/user/IUserReadDto.ts"],"sourcesContent":["import { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\n\nexport enum EntityEventNotificationTriggerEnum {\n  OnCreate = \"OnCreate\",\n  OnAssigned = \"OnAssigned\",\n}\n\nexport interface IEntityEventNotificationReadDto {\n  _id: string;\n  title: ITranslatedText[];\n  text: ITranslatedText[];\n  trigger: EntityEventNotificationTriggerEnum;\n}\n","import { IEntityEventNotificationReadDto } from \"../entityEventNotification/IEntityEventNotificationReadDto\";\nimport { IFieldReadDto } from \"../field/IFieldReadDto\";\nimport { IModelReadDto } from \"../model/IModelReadDto\";\nimport { IRoleReadDto } from \"../role/IRoleReadDto\";\n\nexport enum StaticPermissionEnum {\n  Create = \"Create\",\n  Read = \"Read\",\n  Update = \"Update\",\n  Delete = \"Delete\",\n}\n\nexport interface IEntityPermissionReadDto {\n  _id: string;\n  model: IModelReadDto | string;\n  permissions: StaticPermissionEnum[];\n  entityFieldPermissions: IEntityFieldPermissionReadDto[];\n  entityEventNotifications: IEntityEventNotificationReadDto[];\n  entityUserAssignmentPermissionsByRole?: IEntityUserAssignmentPermissionsByRoleReadDto;\n}\n\nexport interface IEntityFieldPermissionReadDto {\n  field: IFieldReadDto | string;\n  permissions: StaticPermissionEnum[];\n}\n\nexport interface IEntityUserAssignmentPermissionsByRoleReadDto {\n  canAssignToUserFromSameRole: boolean;\n  otherRoles: (IRoleReadDto | string)[];\n}\n","import { IMicroFrontendReadDto } from \"../microFontend/IMicroFrontendReadDto\";\n\nexport enum EventTriggerEnum {\n  OnCreate = \"OnCreate\",\n  OnUpdate = \"OnUpdate\",\n  OnClick = \"OnClick\",\n}\n\nexport enum EventTypeEnum {\n  ApiCall = \"ApiCall\",\n  Redirection = \"Redirection\",\n  MicroFrontendRedirection = \"MicroFrontendRedirection\",\n}\n\nexport interface IEventRequestHeaderReadDto {\n  key: string;\n  value: string;\n}\n\nexport interface IEventReadDto {\n  eventTrigger: EventTriggerEnum;\n  eventType: EventTypeEnum;\n\n  // Redirection options\n  redirectionUrl: string;\n  redirectionToSelf: boolean;\n\n  // API call options\n  requestMethod: string;\n  requestUrl: string;\n  requestDataIsCreatedEntity: boolean;\n  requestData: string;\n  requestHeaders: IEventRequestHeaderReadDto[];\n\n  // Microfrontend redirection\n  microFrontend?: IMicroFrontendReadDto | string;\n  microFrontendComponentId?: string;\n}\n","import { IEventReadDto } from \"../event/IEventReadDto\";\nimport { IFieldTableElementReadDto } from \"../fieldTableElement/IFieldTableElementReadDto\";\nimport { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\n\nexport enum FieldTypeEnum {\n  Number = \"Number\",\n  Text = \"Text\",\n  Paragraph = \"Paragraph\",\n  File = \"File\",\n  Selector = \"Selector\",\n  Button = \"Button\",\n  Table = \"Table\",\n  IFrame = \"IFrame\",\n}\n\nexport interface IFieldOptionReadDto {\n  value: string;\n  label: ITranslatedText[];\n}\n\nexport interface IFieldReadDto {\n  _id: string;\n  name: ITranslatedText[];\n  type: FieldTypeEnum;\n  canChooseFromExistingFiles?: boolean;\n  options?: IFieldOptionReadDto[];\n  fieldEvents: IEventReadDto[];\n  tableOptions?: {\n    name?: ITranslatedText[];\n    columns: (IFieldTableElementReadDto | string)[];\n    rows: (IFieldTableElementReadDto | string)[];\n    yearTable: boolean;\n  };\n\n  createdAt: string;\n  updatedAt: string;\n}\n","import { IFileReadDto } from \"../file/IFileReadDto\";\nimport { IReactionReadDto } from \"../reaction/IReactionReadDto\";\nimport { IUserReadDto } from \"../user/IUserReadDto\";\n\nexport enum ChatMessagesEnum {\n  Receive = \"ChatReceive\",\n  Delete = \"ChatDelete\",\n  ReaceiveReaction = \"ReaceiveReaction\",\n  SendTypingState = \"SendTypingState\",\n  ReceiveTypingState = \"SendTypingState\",\n  ReceiveLastMarkedMessageAsReadByUser = \"ReceiveLastMarkedMessageAsReadByUser\",\n}\n\nexport interface IMessageReadDto {\n  _id: string;\n  from: string;\n  to: string[];\n  message: string;\n  read: string[];\n  readAt?: string[];\n  files: (IFileReadDto | string)[];\n  totalUnreadMessages?: number;\n  reactions?: (IReactionReadDto | string)[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface IPopulatedMessageReadDto {\n  _id: string;\n  from: IUserReadDto;\n  to: IUserReadDto[];\n  message: string;\n  read: string[];\n  readAt?: string[];\n  files: IFileReadDto[];\n  totalUnreadMessages?: number;\n  reactions?: IReactionReadDto[];\n  createdAt: string;\n  updatedAt: string;\n}\n","import { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\nimport { IEventReadDto } from \"../event/IEventReadDto\";\nimport { IFieldReadDto } from \"../field/IFieldReadDto\";\nimport { IModelStateReadDto } from \"../modelState/IModelStateReadDto\";\n\n//#region model fields\nexport interface IModelFieldReadDto {\n  field: IFieldReadDto | string;\n  required: boolean;\n  conditions?: IModelFieldConditionReadDto[];\n  states?: (IModelStateReadDto | string)[];\n  mainField?: boolean;\n  stickInTable?: boolean;\n}\n\nexport interface IModelFieldConditionReadDto {\n  field?: IFieldReadDto | string;\n  conditionType: ModelFieldConditionTypeEnum;\n  value?: number | string;\n  modelState?: IModelStateReadDto | string;\n}\n\nexport enum ModelFieldConditionTypeEnum {\n  SuperiorTo = \"SuperiorTo\",\n  SuperiorOrEqualTo = \"SuperiorOrEqualTo\",\n  InferiorTo = \"InferiorTo\",\n  InferiorOrEqualTo = \"InferiorOrEqualTo\",\n  Equal = \"Equal\",\n  ValueInferiorOrEqualToCurrentYearPlusValueOfFieldAndSuperiorOrEqualToCurrentYear = \"ValueInferiorOrEqualToCurrentYearPlusValueOfFieldAndSuperiorOrEqualToCurrentYear\",\n  StateConditionsMet = \"StateConditionsMet\",\n  IfYearTableThenNumberOfYearsInTheFutureIsEqualToValueOfField = \"IfYearTableThenNumberOfYearsInTheFutureIsEqualToValueOfField\",\n}\n\nexport interface IModelReadDto {\n  _id: string;\n  name: ITranslatedText[];\n  modelFields: IModelFieldReadDto[];\n  modelEvents?: IEventReadDto[];\n  states?: (IModelStateReadDto | string)[];\n  subStates?: (IModelStateReadDto | string)[];\n\n  isForSale?: boolean;\n  quantityField?: IFieldReadDto | string;\n  priceField?: IFieldReadDto | string;\n\n  createdAt: string;\n  updatedAt: string;\n}\n","import { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\n\nexport enum ModelStateTypeEnum {\n  ParentState = \"ParentState\",\n  SubState = \"SubState\",\n}\n\nexport interface IModelStateReadDto {\n  _id: string;\n  name: ITranslatedText[];\n  stateType: ModelStateTypeEnum;\n  exlusive?: boolean;\n}\n","import { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\nimport { IFileReadDto } from \"../file/IFileReadDto\";\nimport { IUserReadDto } from \"../user/IUserReadDto\";\n\nexport enum NotificationMessageEnum {\n  Receive = \"NotificationReceive\",\n}\n\nexport interface INotificationReadDto {\n  _id: string;\n  text: ITranslatedText[];\n  link: string;\n  image?: IFileReadDto | string;\n  to: (IUserReadDto | string)[];\n  clickedBy: (IUserReadDto | string)[];\n\n  createdAt: string;\n  updatedAt: string;\n}\n","import { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\nimport { IFileReadDto } from \"../file/IFileReadDto\";\nimport { IUserReadDto } from \"../user/IUserReadDto\";\n\nexport enum PostVisibilityEnum {\n  Private = \"Private\",\n  Public = \"Public\",\n  Connections = \"Connections\",\n}\n\nexport enum PostDesignEnum {\n  Default = \"Default\",\n  Spacing = \"Spacing\",\n  Card = \"Card\",\n  fullWidthPicture = \"FullWidthPicture\",\n  TitleAndText = \"TitleAndText\",\n  Banner = \"Banner\",\n  TitleImageAndText = \"TitleImageAndText\",\n  ChildrenContainer = \"ChildrenContainer\",\n  RotatingCarzd = \"RotatingCard\",\n  AnimatedTitle = \"AnimatedTitle\",\n  UnderlinedTitle = \"UnderinedTitle\",\n  Footer = \"Footer\",\n  ContactForm = \"ContactForm\",\n  Person = \"Person\",\n  Card2 = \"Card2\",\n  Video = \"Video\",\n  ModelForm = \"ModelForm\",\n  ModelList = \"ModelList\",\n}\n\nexport interface IPostReadDto {\n  _id: string;\n  title?: ITranslatedText[];\n  subTitle?: ITranslatedText[];\n  poster: IUserReadDto | string;\n  content?: ITranslatedText[];\n  files: (IFileReadDto | string)[];\n  visibility: PostVisibilityEnum;\n  design: PostDesignEnum;\n  children: (IPostReadDto | string)[];\n  code?: string;\n\n  createdAt: string;\n  updatedAt: string;\n}\n","import { IUserReadDto } from \"../user/IUserReadDto\";\n\nexport enum ReactionEnum {\n  Love = \"Love\",\n  Laugh = \"Laugh\",\n  Shock = \"Shock\",\n  Cry = \"Cry\",\n  Angry = \"Angry\",\n  OK = \"OK\",\n}\n\nexport interface IReactionReadDto {\n  _id: string;\n  user: IUserReadDto | string;\n  reaction: ReactionEnum;\n\n  createdAt: string;\n  updatedAt: string;\n}\n","import { ITranslatedText } from \"../../globalTypes/ITranslatedText\";\nimport { IEntityPermissionReadDto } from \"../entityPermission/IEntityPermissionReadDto\";\n\nexport enum PermissionEnum {\n  EditConfiguration = \"EditConfiguration\",\n\n  CreatePage = \"CreatePage\",\n  ReadPage = \"ReadPage\",\n  UpdatePage = \"UpdatePage\",\n  DeletePage = \"DeletePage\",\n\n  CreatePost = \"CreatePost\",\n\n  CreateField = \"CreateField\",\n  ReadField = \"ReadField\",\n  UpdateField = \"UpdateField\",\n  DeleteField = \"DeleteField\",\n\n  CreateModel = \"CreateModel\",\n  ReadModel = \"ReadModel\",\n  UpdateModel = \"UpdateModel\",\n  DeleteModel = \"DeleteModel\",\n\n  CreateUser = \"CreateUser\",\n  ReadUser = \"ReadUser\",\n  UpdateUser = \"UpdateUser\",\n  DeleteUser = \"DeleteUser\",\n\n  CreateRole = \"CreateRole\",\n  ReadRole = \"ReadRole\",\n  UpdateRole = \"UpdateRole\",\n  DeleteRole = \"DeleteRole\",\n\n  ReadMicroFrontend = \"ReadMicroFrontend\",\n  CreateMicroFrontend = \"CreateMicroFrontend\",\n  UpdateMicroFrontend = \"UpdateMicroFrontend\",\n  DeleteMicroFrontend = \"DeleteMicroFrontend\",\n}\n\nexport interface IRoleReadDto {\n  _id: string;\n  name: ITranslatedText[];\n  permissions: PermissionEnum[];\n  entityPermissions: (IEntityPermissionReadDto | string)[];\n\n  createdAt: string;\n  updatedAt: string;\n}\n","import { IFileReadDto } from \"../file/IFileReadDto\";\nimport { IMessageReadDto } from \"../message/IMessageReadDto\";\nimport { IRoleReadDto } from \"../role/IRoleReadDto\";\n\nexport enum SuperRoleEnum {\n  SuperAdmin = \"SuperAdmin\",\n  Normal = \"Normal\",\n}\n\nexport interface IUserReadDto {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  profilePicture?: IFileReadDto | string;\n  superRole: SuperRoleEnum;\n  role?: IRoleReadDto | string;\n  hasMessagingEmailsActivated?: boolean;\n}\n\nexport interface IUserReadDtoWithLastReadMessageInConversationReadDto\n  extends IUserReadDto {\n  to: string[];\n  lastReadMessageInConversation: IMessageReadDto | null;\n}\n"],"names":["EntityEventNotificationTriggerEnum","StaticPermissionEnum","EventTriggerEnum","EventTypeEnum","FieldTypeEnum","ChatMessagesEnum","ModelFieldConditionTypeEnum","ModelStateTypeEnum","NotificationMessageEnum","PostVisibilityEnum","PostDesignEnum","ReactionEnum","PermissionEnum","SuperRoleEnum"],"mappings":"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"}